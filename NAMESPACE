# Generated by roxygen2: do not edit by hand

S3method(format,tm_rule)
S3method(print,tm_rule)
export("%>%")
export("%nin%")
export(always_true)
export(analyze_reallocations)
export(calculate_firewall_severity)
export(checksum_evenly_divisible)
export(checksum_range)
export(collect_board_letters)
export(compute_bridge_strength)
export(connect_free_pieces)
export(count_garbage)
export(count_grid_regions)
export(count_pipe_groups)
export(count_valid_passphrases)
export(create_board)
export(create_duet)
export(create_generator)
export(create_particles)
export(create_solo)
export(create_tm_rule)
export(dance)
export(dance_a_billion_times)
export(dayxx_a_stub)
export(dayxx_b_stub)
export(determine_firewall_delay)
export(enexpr)
export(enhance_matrix)
export(enquo)
export(expand_rule)
export(expr)
export(exprs)
export(fast_spinlock)
export(find_first_spiral_step_bigger_than_target)
export(find_longest_hexagon_distance)
export(find_program_imbalance)
export(find_root_program)
export(find_slowest_particle)
export(find_strongest_bridge)
export(follow_day05a_instructions)
export(follow_day05b_instructions)
export(generate_grid_hashes)
export(get_spinlock_value_after_last_insertion)
export(hexagon_distance)
export(in_deadlock)
export(int_to_n_bits)
export(is_divisible_by_4)
export(is_divisible_by_8)
export(judge_generators)
export(keep_if)
export(knot_hash)
export(matrix_to_string)
export(no_anagrams)
export(no_repeated_words)
export(process_stream)
export(quo)
export(quo_name)
export(quos)
export(run_many_instructions)
export(search_and_destroy_particles)
export(search_pipes_from_zero)
export(spinlock)
export(spiral_distance)
export(str_sum_ones)
export(string_to_matrix)
export(sum_of_digits_matching_halfway_around)
export(sum_of_digits_matching_next)
export(sym)
export(syms)
export(turing_machine)
export(twist_knot)
export(walk_board_from_start)
importFrom(magrittr,"%>%")
importFrom(rlang,.data)
importFrom(rlang,UQ)
importFrom(rlang,UQS)
importFrom(rlang,enexpr)
importFrom(rlang,enquo)
importFrom(rlang,expr)
importFrom(rlang,exprs)
importFrom(rlang,quo)
importFrom(rlang,quo_name)
importFrom(rlang,quos)
importFrom(rlang,sym)
importFrom(rlang,syms)
