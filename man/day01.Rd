% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day01.R
\name{sum_of_digits_matching_next}
\alias{sum_of_digits_matching_next}
\alias{sum_of_digits_matching_halfway_around}
\title{Day 1: Inverse Captcha}
\usage{
sum_of_digits_matching_next(x)

sum_of_digits_matching_halfway_around(x)
}
\description{
Inverse Captcha.
}
\details{
To quote the \href{http://adventofcode.com/2017/day/1}{website}

\strong{Part One}

The captcha requires you to review a sequence of digits (your puzzle input)
and find the sum of all digits that match the next digit in the list. The
list is circular, so the digit after the last digit is the first digit in the
list.

For example:
\itemize{
\item 1122 produces a sum of 3 (1 + 2) because the first digit (1) matches the
second digit and the third digit (2) matches the fourth digit.
\item 1111 produces 4 because each digit (all 1) matches the next.
\item 1234 produces 0 because no digit matches the next.
\item 91212129 produces 9 because the only digit that matches the next one is the
last digit, 9.
}

\strong{Part Two}

You notice a progress bar that jumps to 50% completion. Apparently, the door
isn't yet satisfied, but it did emit a star as encouragement. The
instructions change:

Now, instead of considering the next digit, it wants you to consider the
digit halfway around the circular list. That is, if your list contains 10
items, only include a digit in your sum if the digit 10/2 = 5 steps forward
matches it. Fortunately, your list has an even number of elements.

For example:
\itemize{
\item 1212 produces 6: the list contains 4 items, and all four digits match the
digit 2 items ahead.
\item 1221 produces 0, because every comparison is between a 1 and a 2.
\item 123425 produces 4, because both 2s match each other, but no other digit
has a match.
\item 123123 produces 12.
\item 12131415 produces 4.
}
}
