% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day01.R
\name{day01}
\alias{day01}
\alias{sum_of_digits_matching_next}
\alias{sum_of_digits_matching_halfway_around}
\title{Day 01: Inverse Captcha}
\usage{
sum_of_digits_matching_next(x)

sum_of_digits_matching_halfway_around(x)
}
\arguments{
\item{x}{a number}
}
\value{
the specified sum of digits
}
\description{
\href{http://adventofcode.com/2017/day/1}{Inverse Captcha}
}
\details{
\strong{Part One}

The night before Christmas, one of Santa's Elves calls you in a panic.
"The printer's broken! We can't print the \emph{Naughty or Nice List}!" By
the time you make it to sub-basement 17,
there are only a few minutes until midnight. "We have a big problem,"
she says; "there must be almost \emph{fifty} bugs in this system, but nothing
else can print The List. Stand in this square, quick! There's no time to
explain; if you can convince them to pay you in \emph{stars}, you'll be able
to--" She pulls a lever and the world goes blurry.

When your eyes can focus again, everything seems a lot more pixelated
than before. She must have sent you inside the computer! You check the
system clock: \emph{25 milliseconds} until midnight. With that much time, you
should be able to collect all \emph{fifty stars} by December 25th.

Collect stars by solving puzzles. Two puzzles will be made available on
each ~~day~~ millisecond in the advent calendar; the second puzzle is
unlocked when you complete the first. Each puzzle grants \emph{one star}.
Good luck!

You're standing in a room with "digitization quarantine" written in LEDs
along one wall. The only door is locked, but it includes a small
interface. "Restricted Area - Strictly No Digitized Users Allowed."

It goes on to explain that you may only leave by solving a
\href{https://en.wikipedia.org/wiki/CAPTCHA}{captcha} to prove you're \emph{not} a
human. Apparently, you only get one millisecond to solve the captcha:
too fast for a normal human, but it feels like hours to you.

The captcha requires you to review a sequence of digits (your puzzle
input) and find the \emph{sum} of all digits that match the \emph{next} digit in
the list. The list is circular, so the digit after the last digit is the
\emph{first} digit in the list.

For example:
\itemize{
\item \code{1122} produces a sum of \code{3} (\code{1} + \code{2}) because the first digit
(\code{1}) matches the second digit and the third digit (\code{2}) matches the
fourth digit.
\item \code{1111} produces \code{4} because each digit (all \code{1}) matches the next.
\item \code{1234} produces \code{0} because no digit matches the next.
\item \code{91212129} produces \code{9} because the only digit that matches the next
one is the last digit, \code{9}.
}

\emph{What is the solution} to your captcha?

\strong{Part Two}

You notice a progress bar that jumps to 50% completion. Apparently, the
door isn't yet satisfied, but it did emit a \emph{star} as encouragement. The
instructions change:

Now, instead of considering the \emph{next} digit, it wants you to consider
the digit \emph{halfway around} the circular list. That is, if your list
contains \code{10} items, only include a digit in your sum if the digit
\code{10/2 = 5} steps forward matches it. Fortunately, your list has an even
number of elements.

For example:
\itemize{
\item \code{1212} produces \code{6}: the list contains \code{4} items, and all four
digits match the digit \code{2} items ahead.
\item \code{1221} produces \code{0}, because every comparison is between a \code{1} and a
\code{2}.
\item \code{123425} produces \code{4}, because both \code{2}s match each other, but no
other digit has a match.
\item \code{123123} produces \code{12}.
\item \code{12131415} produces \code{4}.
}

\emph{What is the solution} to your new captcha?
}
\examples{
sum_of_digits_matching_next(91212129)
sum_of_digits_matching_halfway_around(12131415)
}
