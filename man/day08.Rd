% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/day08.R
\name{run_register_instructions}
\alias{run_register_instructions}
\title{Day 08: I Heard You Like Registers}
\usage{
run_register_instructions(lines)
}
\arguments{
\item{lines}{a character vector of commands to run}
}
\description{
\href{http://adventofcode.com/2017/day/8}{I Heard You Like Registers}
}
\details{
\strong{Part One}

You receive a signal
directly from the CPU. Because of your recent assistance with \href{http://adventofcode.com/2017/day/5}{jump instructions}, it would like you to
compute the result of a series of unusual register instructions.

Each instruction consists of several parts: the register to modify,
whether to increase or decrease that register's value, the amount by
which to increase or decrease it, and a condition. If the condition
fails, skip the instruction without modifying the register. The
registers all start at \code{0}. The instructions look like this:\preformatted{b inc 5 if a > 1
a inc 1 if b < 5
c dec -10 if a >= 1
c inc -20 if c == 10
}

These instructions would be processed as follows:
\itemize{
\item Because \code{a} starts at \code{0}, it is not greater than \code{1}, and so \code{b} is
not modified.
\item \code{a} is increased by \code{1} (to \code{1}) because \code{b} is less than \code{5} (it is
\code{0}).
\item \code{c} is decreased by \code{-10} (to \code{10}) because \code{a} is now greater than
or equal to \code{1} (it is \code{1}).
\item \code{c} is increased by \code{-20} (to \code{-10}) because \code{c} is equal to \code{10}.
}

After this process, the largest value in any register is \code{1}.

You might also encounter \code{&lt;=} (less than or equal to) or \code{!=} (not equal
to). However, the CPU doesn't have the bandwidth to tell you what all
the registers are named, and leaves that to you to determine.

\emph{What is the largest value in any register} after completing the
instructions in your puzzle input?

\strong{Part Two}

To be safe, the CPU also needs to know \emph{the highest value held in any
register during this process} so that it can decide how much memory to
allocate to these operations. For example, in the above instructions,
the highest value ever held was \code{10} (in register \code{c} after the third
instruction was evaluated).
}
\examples{
lines <- "
b inc 5 if a > 1
a inc 1 if b < 5
c dec -10 if a >= 1
c inc -20 if c == 10"
str(run_register_instructions(lines))
}
